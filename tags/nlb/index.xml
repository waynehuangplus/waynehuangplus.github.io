<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NLB on The Jorney of Wayne</title><link>https://blog.wayne.wiki/tags/nlb/</link><description>Recent content in NLB on The Jorney of Wayne</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 07 Jun 2021 01:31:19 +0000</lastBuildDate><atom:link href="https://blog.wayne.wiki/tags/nlb/index.xml" rel="self" type="application/rss+xml"/><item><title>Auto-scaling process is slow on Amazon EKS with NLB (Network Load Balancing)</title><link>https://blog.wayne.wiki/blog/2021/06/auto-scaling-process-is-slow-on-amazon-eks-with-nlb-network-load-balancing/</link><pubDate>Mon, 07 Jun 2021 01:31:19 +0000</pubDate><guid>https://blog.wayne.wiki/blog/2021/06/auto-scaling-process-is-slow-on-amazon-eks-with-nlb-network-load-balancing/</guid><description>Background One of my customer wants to build the workloads on Amazon EKS, and plan to leverage Pod AutoScaler to automatically scale the number of pods in a deployment. The LoadBalancer type ahead the target group is NLB (Network Load Balancer) in their use case. Ingress traffic to Amazon EKS Customer expects the registration flow of new target should be soon (less than one minute), but the real situation is that it takes minutes before the new provisioned Pod can start to serve traffic.</description></item></channel></rss>